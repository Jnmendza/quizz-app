{"ast":null,"code":"import _slicedToArray from \"/Volumes/MENDOZA/Coding/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/MENDOZA/Coding/quiz-app/src/Quiz.js\";\n\nimport React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\nimport history from './history';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationSlideIn, transition } from './animations';\nimport Marquee from './Marquee';\n\nvar Quiz = function Quiz() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      setCurrentQuestion = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showScore = _useState4[0],\n      setShowScore = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState(2),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fiftyFifty = _useState8[0],\n      setFiftyFifty = _useState8[1];\n\n  var handelAnswerBtnClick = function handelAnswerBtnClick(isCorrect) {\n    if (isCorrect) {\n      correctAnswer();\n      setScore(score + 1);\n    } else wrongAnswer();\n\n    var nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  var handleResetBtnClick = function handleResetBtnClick() {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    history.push('/');\n  };\n\n  var correctAnswer = function correctAnswer() {\n    M.toast({\n      html: 'Correct Answer!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n  };\n\n  var wrongAnswer = function wrongAnswer() {\n    M.toast({\n      html: 'Wrong Answer!',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(motion.div, {\n    className: \"app-container\",\n    initial: \"out\",\n    animate: \"end\",\n    exit: \"out\",\n    variants: animationSlideIn,\n    transition: transition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"You scored \", score, \" out of \", questions.length, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetBtnClick,\n    className: \"reset-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 27\n    }\n  }, \"Reset\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, questions[currentQuestion].questionText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].answerOptions.map(function (answer) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handelAnswerBtnClick(answer.isCorrect);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, answer.answerText);\n  }))));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Volumes/MENDOZA/Coding/quiz-app/src/Quiz.js"],"names":["React","useState","questions","M","history","Link","motion","animationSlideIn","transition","Marquee","Quiz","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","fiftyFifty","setFiftyFifty","handelAnswerBtnClick","isCorrect","correctAnswer","wrongAnswer","nextQuestion","length","handleResetBtnClick","push","toast","html","classes","displayLength","questionText","answerOptions","map","answer","answerText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\nimport history from './history'\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationSlideIn, transition } from './animations'\nimport Marquee from './Marquee';\n\n\nconst Quiz = () => {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const [fiftyFifty, setFiftyFifty] =  useState(2)\n\n    const handelAnswerBtnClick = (isCorrect) => {\n        if(isCorrect){\n        correctAnswer()\t\t\n        setScore(score + 1)\n        } else wrongAnswer()\n        const nextQuestion = currentQuestion + 1;\n        if(nextQuestion < questions.length){\n        setCurrentQuestion(nextQuestion)\n        } else {\n        setShowScore(true)\n        }\n    }\n\n    const handleResetBtnClick = () => {\n        setCurrentQuestion(0)\n        setShowScore(false)\n        setScore(0)\n        history.push('/')\n    }\n\n    const correctAnswer = () => {\n        M.toast({\n            html: 'Correct Answer!',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n    }\n\n    const wrongAnswer = () => {\n        M.toast({\n            html: 'Wrong Answer!',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n    }\n\n        return (\n            <motion.div \n                className='app-container'   \n                initial='out'\n                animate='end'\n                exit='out'\n                variants={animationSlideIn}\n                transition={transition}\n            >\n                {showScore ? (\n                    <div className='score-section'>\n            You scored {score} out of {questions.length}\n            <Link to='/' ><button onClick={handleResetBtnClick} className='reset-btn'>Reset</button></Link>\n            </div>\n                ) : (\n                    <>\n                        <div className='question-section'>\n                            <div className='question-text'>{questions[currentQuestion].questionText}</div>\n                            <div className='question-count'>\n                                <span>Question {currentQuestion + 1}</span>/{questions.length}\n                            </div>\n                        </div>\n                        <div className='answer-section'>\n                {questions[currentQuestion].answerOptions.map(answer => (\n                <button onClick={()=>handelAnswerBtnClick(answer.isCorrect)}>{answer.answerText}</button>\n                ))}\n                        </div>\n                    </>\n                )}\n            </motion.div>\n        );\n    }\n\n    export default Quiz;\n"]},"metadata":{},"sourceType":"module"}