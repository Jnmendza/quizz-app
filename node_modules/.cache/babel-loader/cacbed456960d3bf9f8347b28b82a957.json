{"ast":null,"code":"import _slicedToArray from \"/Volumes/MENDOZA/Coding/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/MENDOZA/Coding/quiz-app/src/App.js\";\nimport React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      setCurrentQuestion = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showScore = _useState4[0],\n      setShowScore = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var handelAnswerBtnClick = function handelAnswerBtnClick(isCorrect) {\n    if (isCorrect) {\n      correctAnswer();\n      setScore(score + 1);\n    }\n\n    var nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  var handleResetBtnClick = function handleResetBtnClick() {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  var correctAnswer = function correctAnswer() {\n    M.toast({\n      html: 'Correct Answer!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetBtnClick,\n    className: \"reset-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, questions[currentQuestion].answerOptions.map(function (answer) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handelAnswerBtnClick(answer.isCorrect);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, answer.answerText);\n  }))));\n}","map":{"version":3,"sources":["/Volumes/MENDOZA/Coding/quiz-app/src/App.js"],"names":["React","useState","questions","M","App","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handelAnswerBtnClick","isCorrect","correctAnswer","nextQuestion","length","handleResetBtnClick","toast","html","classes","displayLength","questionText","answerOptions","map","answer","answerText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,CAAP,MAAc,iBAAd;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACkBH,QAAQ,CAAC,CAAD,CAD1B;AAAA;AAAA,MACrBI,eADqB;AAAA,MACJC,kBADI;;AAAA,mBAEML,QAAQ,CAAC,KAAD,CAFd;AAAA;AAAA,MAErBM,SAFqB;AAAA,MAEVC,YAFU;;AAAA,mBAGFP,QAAQ,CAAC,CAAD,CAHN;AAAA;AAAA,MAGrBQ,KAHqB;AAAA,MAGdC,QAHc;;AAK5B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,SAAD,EAAe;AAC1C,QAAGA,SAAH,EAAa;AAChBC,MAAAA,aAAa;AACRH,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,QAAMK,YAAY,GAAGT,eAAe,GAAG,CAAvC;;AACA,QAAGS,YAAY,GAAGZ,SAAS,CAACa,MAA5B,EAAmC;AACjCT,MAAAA,kBAAkB,CAACQ,YAAD,CAAlB;AACD,KAFD,MAEO;AACLN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAXD;;AAaA,MAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BV,IAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACH,GAJD;;AAMA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC7BV,IAAAA,CAAC,CAACc,KAAF,CAAQ;AACPC,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAE,aAFF;AAGPC,MAAAA,aAAa,EAAE;AAHR,KAAR;AAKE,GAND;;AAQD,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEb,SAAS,gBACT;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACkBE,KADlB,cACiCP,SAAS,CAACa,MAD3C,eAEM;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAsC,IAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFN,CADS,gBAMT,uDACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBX,eAAe,GAAG,CAAlC,CADD,OAC8CH,SAAS,CAACa,MADxD,CADD,eAIC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCb,SAAS,CAACG,eAAD,CAAT,CAA2BgB,YAA3D,CAJD,CADD,eAOC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQnB,SAAS,CAACG,eAAD,CAAT,CAA2BiB,aAA3B,CAAyCC,GAAzC,CAA6C,UAAAC,MAAM;AAAA,wBAClD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAIb,oBAAoB,CAACa,MAAM,CAACZ,SAAR,CAAxB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DY,MAAM,CAACC,UAArE,CADkD;AAAA,GAAnD,CADR,CAPD,CATF,CADD;AA0BA","sourcesContent":["import React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\n\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handelAnswerBtnClick = (isCorrect) => {\n    if(isCorrect){\n\tcorrectAnswer()\t\t\n      setScore(score + 1)\n    }\n    const nextQuestion = currentQuestion + 1;\n    if(nextQuestion < questions.length){\n      setCurrentQuestion(nextQuestion)\n    } else {\n      setShowScore(true)\n    }\n  }\n\n  const handleResetBtnClick = () => {\n      setCurrentQuestion(0)\n      setShowScore(false)\n      setScore(0)\n  }\n\n  const correctAnswer = () => {\n\tM.toast({\n\t\thtml: 'Correct Answer!',\n\t\tclasses: 'toast-valid',\n\t\tdisplayLength: 1500\n\t});\n  }\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n          You scored {score} out of {questions.length}\n          <button onClick={handleResetBtnClick} className='reset-btn'>Reset</button>\n        </div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n            {questions[currentQuestion].answerOptions.map(answer => (\n              <button onClick={()=>handelAnswerBtnClick(answer.isCorrect)}>{answer.answerText}</button>\n            ))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}