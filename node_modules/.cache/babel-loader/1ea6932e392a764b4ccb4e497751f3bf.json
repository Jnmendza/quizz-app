{"ast":null,"code":"var _jsxFileName = \"/Volumes/MENDOZA/Coding/quiz-app/src/App.js\";\nimport React, { useState } from 'react';\nexport default function App() {\n  var _this = this;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", questions.length, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetBtnClick,\n    className: \"reset-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, questions[currentQuestion].questionText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }, questions[currentQuestion].answerOptions.map(function (answer) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handelAnswerBtnClick(answer.isCorrect);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, answer.answerText);\n  }))));\n}","map":{"version":3,"sources":["/Volumes/MENDOZA/Coding/quiz-app/src/App.js"],"names":["React","useState","App","showScore","score","questions","length","handleResetBtnClick","currentQuestion","questionText","answerOptions","map","answer","handelAnswerBtnClick","isCorrect","answerText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE7B,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEC,SAAS,gBACT;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACkBC,KADlB,cACiCC,SAAS,CAACC,MAD3C,eAEM;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAsC,IAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFN,CADS,gBAMT,uDACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,SAAS,CAACG,eAAD,CAAT,CAA2BC,YAA3D,CADD,eAEC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBD,eAAe,GAAG,CAAlC,CADD,OAC8CH,SAAS,CAACC,MADxD,CAFD,CADD,eAOC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQD,SAAS,CAACG,eAAD,CAAT,CAA2BE,aAA3B,CAAyCC,GAAzC,CAA6C,UAAAC,MAAM;AAAA,wBAClD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAIC,oBAAoB,CAACD,MAAM,CAACE,SAAR,CAAxB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DF,MAAM,CAACG,UAArE,CADkD;AAAA,GAAnD,CADR,CAPD,CATF,CADD;AA0BA","sourcesContent":["import React, { useState } from 'react';\n\n\nexport default function App() {\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n          You scored {score} out of {questions.length}\n          <button onClick={handleResetBtnClick} className='reset-btn'>Reset</button>\n        </div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n            {questions[currentQuestion].answerOptions.map(answer => (\n              <button onClick={()=>handelAnswerBtnClick(answer.isCorrect)}>{answer.answerText}</button>\n            ))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}