{"ast":null,"code":"import _slicedToArray from \"/Volumes/MENDOZA/Coding/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/MENDOZA/Coding/quiz-app/src/Quiz.js\";\n\nimport React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\nimport history from './history';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationSlideIn, transition } from './animations';\n\nvar Quiz = function Quiz() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentQuestion = _useState2[0],\n      setCurrentQuestion = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showScore = _useState4[0],\n      setShowScore = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState(2),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fiftyFifty = _useState8[0],\n      setFiftyFifty = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      usedFiftyFifty = _useState10[0],\n      setUsedFiftyFifty = _useState10[1];\n\n  var handelAnswerBtnClick = function handelAnswerBtnClick(isCorrect) {\n    if (isCorrect) {\n      correctAnswer();\n      setScore(score + 1);\n    } else wrongAnswer();\n\n    var nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  var handleResetBtnClick = function handleResetBtnClick() {\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    history.push('/');\n  };\n\n  var correctAnswer = function correctAnswer() {\n    M.toast({\n      html: 'Correct Answer!',\n      classes: 'toast-valid',\n      displayLength: 1500\n    });\n  };\n\n  var wrongAnswer = function wrongAnswer() {\n    M.toast({\n      html: 'Wrong Answer!',\n      classes: 'toast-invalid',\n      displayLength: 1500\n    });\n  };\n\n  var onClick5050 = function onClick5050() {\n    var answers = questions[currentQuestion].answerOptions;\n    console.log(answers);\n    var count = 0;\n    answers.forEach(function (answer) {\n      if (count < 2 && answer.isCorrect === false) {\n        answer.style.visibility = 'hidden';\n        count++;\n        setUsedFiftyFifty;\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(motion.div, {\n    className: \"app-container\",\n    initial: \"out\",\n    animate: \"end\",\n    exit: \"out\",\n    variants: animationSlideIn,\n    transition: transition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"You scored \", score, \" out of \", questions.length, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetBtnClick,\n    className: \"reset-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, \"Reset\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, questions[currentQuestion].questionText), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Question \", currentQuestion + 1, \"/\", questions.length), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: onClick5050,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"50/50\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].answerOptions.map(function (answer) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"answer-option\",\n      onClick: function onClick() {\n        return handelAnswerBtnClick(answer.isCorrect);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, answer.answerText);\n  }))));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Volumes/MENDOZA/Coding/quiz-app/src/Quiz.js"],"names":["React","useState","questions","M","history","Link","motion","animationSlideIn","transition","Quiz","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","fiftyFifty","setFiftyFifty","usedFiftyFifty","setUsedFiftyFifty","handelAnswerBtnClick","isCorrect","correctAnswer","wrongAnswer","nextQuestion","length","handleResetBtnClick","push","toast","html","classes","displayLength","onClick5050","answers","answerOptions","console","log","count","forEach","answer","style","visibility","questionText","map","answerText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { questions } from './questions';\nimport M from 'materialize-css';\nimport history from './history'\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { animationSlideIn, transition } from './animations'\n\nconst Quiz = () => {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const [fiftyFifty, setFiftyFifty] = useState(2);\n    const [usedFiftyFifty, setUsedFiftyFifty] = useState(false);\n\n    const handelAnswerBtnClick = (isCorrect) => {\n        if(isCorrect){\n        correctAnswer()\t\t\n        setScore(score + 1)\n        } else wrongAnswer()\n        const nextQuestion = currentQuestion + 1;\n        if(nextQuestion < questions.length){\n        setCurrentQuestion(nextQuestion)\n        } else {\n        setShowScore(true)\n        }\n    }\n\n    const handleResetBtnClick = () => {\n        setCurrentQuestion(0)\n        setShowScore(false)\n        setScore(0)\n        history.push('/')\n    }\n\n    const correctAnswer = () => {\n        M.toast({\n            html: 'Correct Answer!',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n    }\n\n    const wrongAnswer = () => {\n        M.toast({\n            html: 'Wrong Answer!',\n            classes: 'toast-invalid',\n            displayLength: 1500\n        });\n    }\n\n    const onClick5050 = () => {\n            const answers = questions[currentQuestion].answerOptions\n            console.log(answers)\n            let count = 0;\n            answers.forEach(answer => {\n                if(count < 2 && answer.isCorrect === false){\n                    answer.style.visibility = 'hidden'\n                    count++\n                    setUsedFiftyFifty\n                }\n\n            })\n    }\n\n        return (\n            <motion.div \n                className='app-container'   \n                initial='out'\n                animate='end'\n                exit='out'\n                variants={animationSlideIn}\n                transition={transition}\n            >\n                {showScore ? (\n                    <div className='score-section'>\n            You scored {score} out of {questions.length}\n            <Link to='/' ><button onClick={handleResetBtnClick} className='reset-btn'>Reset</button></Link>\n            </div>\n                ) : (\n                    <>\n                        <div className='question-section'>\n                            <div className='question-text'>{questions[currentQuestion].questionText}</div>\n                            <div className='question-count'>\n                                <span>Question {currentQuestion + 1}/{questions.length}</span>\n                                <span onClick={onClick5050}>50/50</span>\n                            </div>\n                        </div>\n                        <div className='answer-section'>\n                            {questions[currentQuestion].answerOptions.map(answer => (\n                            <button className=\"answer-option\" onClick={()=>handelAnswerBtnClick(answer.isCorrect)}>{answer.answerText}</button>\n                            ))}\n                        </div>\n                    </>\n                )}\n            </motion.div>\n        );\n    }\n\n    export default Quiz;\n"]},"metadata":{},"sourceType":"module"}